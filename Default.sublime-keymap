[

///////////////////////////////////////////////////
/////////////////// Moving around: ////////////////
///////////////////////////////////////////////////


////////////////// Move line up/down
{"keys": ["ctrl+t"], "command": "move", "args": {"by": "lines", "forward": true}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },
{"keys": ["ctrl+t"], "command": "chain",
    "args": {
        "commands": [
            {"command": "move", "args": {"by": "lines", "forward": true}},
            {"command": "auto_complete_open_link"}
        ]
    },
    "context": [
        {"key": "setting.lsp_active"},
        {"key": "setting.command_mode", "operator": "equal", "operand": false },
        { "key": "auto_complete_visible", "operand": true },
    ]
},
{"keys": ["ctrl+c"], "command": "move", "args": {"by": "lines", "forward": false}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },
{"keys": ["ctrl+c"], "command": "chain",
    "args": {
        "commands": [
            {"command": "move", "args": {"by": "lines", "forward": false}},
            {"command": "auto_complete_open_link"}
        ]
    },
    "context": [
        {"key": "setting.command_mode", "operator": "equal", "operand": false },
        {"key": "setting.lsp_active"},
        { "key": "auto_complete_visible", "operand": true },
    ]
},


// navigate side bar
{"keys": ["o"], "command": "move", "args": {"by": "characters", "forward": false}, "context":
[ {"key": "control", "operand": "sidebar_tree"} ] },
{"keys": ["t"], "command": "move", "args": {"by": "lines", "forward": true}, "context":
[ {"key": "control", "operand": "sidebar_tree"} ] },
{"keys": ["c"], "command": "move", "args": {"by": "lines", "forward": false}, "context":
[ {"key": "control", "operand": "sidebar_tree"} ] },
{"keys": ["u"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
[ {"key": "control", "operand": "sidebar_tree"} ] },

////////////////// Up:
{"keys": ["c"], "command": "move", "args": {"by": "lines", "forward": false}, "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["c"], "command": "move", "args": {"by": "lines", "forward": false, "extend": true}, "context":
[
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": false},
    {"key": "last_command", "operator": "not_equal", "operand": "duplicate_line" },
    {"key": "last_command", "operator": "not_equal", "operand": "insert_snippet" },
    {"key": "last_command", "operator": "not_equal", "operand": "copy" },
    {"key": "last_command", "operator": "not_equal", "operand": "next_modification" },
    {"key": "last_command", "operator": "not_equal", "operand": "find_next" },
    {"key": "last_command", "operator": "not_equal", "operand": "" },
]
},

////////////////// Down:
{"keys": ["t"], "command": "move", "args": {"by": "lines", "forward": true}, "context": [ {"key": "setting.command_mode"}, ] },
{"keys": ["t"], "command": "move", "args": {"by": "lines", "forward": true, "extend": true}, "context":
[
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": false},
    {"key": "last_command", "operator": "not_equal", "operand": "duplicate_line" },
    {"key": "last_command", "operator": "not_equal", "operand": "insert_snippet" },
    {"key": "last_command", "operator": "not_equal", "operand": "copy" },
    {"key": "last_command", "operator": "not_equal", "operand": "next_modification" },
    {"key": "last_command", "operator": "not_equal", "operand": "find_next" },
    {"key": "last_command", "operator": "not_equal", "operand": "" },
]
},

////////////////// Right:
{"keys": ["u"], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+u"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/delete_subword_forward.sublime-macro"}, "context": [ {"key": "setting.command_mode"}, ] },

{"keys": ["u"], "command": "move", "args": {"by": "characters", "forward": true, "extend": true}, "context":
[
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": false},
]
},

{"keys": ["ctrl+u"], "command": "insert_before_or_after", "args": {"after": true, "plusone": true}, "context":
[
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    {"key": "setting.command_mode"},
]
},

{"keys": ["ctrl+shift+u"], "command": "move", "args": {"by": "subwords", "forward": true, "extend": true}, "context": [{"key": "setting.command_mode"}, ] },

////////////////// Left:
{"keys": ["o"], "command": "move", "args": {"by": "characters", "forward": false}, "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+o"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/delete_subword_backward.sublime-macro"}, "context": [ {"key": "setting.command_mode"}, ] },

{"keys": ["o"], "command": "move", "args": {"by": "characters", "forward": false, "extend": true}, "context":
[
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": false},
]
},

{"keys": ["ctrl+o"], "command": "insert_before_or_after", "args": {"after": false, "plusone": true}, "context":
[
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    {"key": "setting.command_mode"},
]
},

{"keys": ["ctrl+shift+o"], "command": "move", "args": {"by": "subwords", "forward": false, "extend": true}, "context": [{"key": "setting.command_mode"}, ] },


////////////////// Right word begin:
{"keys": ["ctrl+shift+r"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true}},
{"keys": ["R"], "command": "move", "args": {"by": "subwords", "forward": true}, "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["R"], "command": "move", "args": {"by": "subword_ends", "forward": true, "extend": true}, "context": [
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
] },

{"keys": ["r"], "command": "move", "args": {"by": "words", "forward": true}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": true },] },

{"keys": ["r"], "command": "move", "args": {"by": "word_ends", "forward": true, "extend": true},
"context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
    {"key": "selection_empty", "operator": "equal", "operand": false },
] },

{ "keys": ["ctrl+r"], "command": "move", "args": {"by": "stops", "word_begin": true, "empty_line": false, "separators": "", "forward": true, "extend": false }, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
]
},

{"keys": ["ctrl+r"], "command": "move", "args": {"by": "stops", "word_begin": true, "empty_line": false, "separators": "", "forward": true, "extend": true },
"context": [
    {"key": "reversed_selection", "match_all": true, "operand": false },
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
] },

{"keys": ["ctrl+r"], "command": "move", "args": {"by": "stops", "word_end": true, "empty_line": false, "separators": "", "forward": true, "extend": true },
"context": [
    {"key": "setting.command_mode"},
    {"key": "reversed_selection", "match_all": true, "operand": true },
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
] },

////////////////// Right word end:
{"keys": ["l"], "command": "move", "args": {"by": "stops", "word_end": true, "punct_end": true, "empty_line": false, "forward": true, "extend": false },
"context": [{"key": "setting.command_mode"}]
},
{"keys": ["l"], "command": "move", "args": {"by": "stops", "word_end": true, "punct_end": true, "empty_line": false, "forward": true, "extend": true }, "context": [
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
]
},
{"keys": ["ctrl+l"], "command": "move", "args": {"by": "stops", "word_end": true, "empty_line": false, "separators": "", "forward": true, "extend": false },
"context": [{"key": "setting.command_mode"}]
},

{ "keys": ["ctrl+l"], "command": "move", "args": {"by": "stops", "word_begin": true, "empty_line": false, "separators": "", "forward": true, "extend": true }, "context": [
    {"key": "reversed_selection", "match_all": true, "operand": true },
    { "key": "selection_empty", "operator": "equal", "operand": false },
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
]
},

{ "keys": ["ctrl+l"], "command": "move", "args": {"by": "stops", "word_end": true, "empty_line": false, "separators": "", "forward": true, "extend": true }, "context": [
    {"key": "reversed_selection", "match_all": true, "operand": false },
    { "key": "selection_empty", "operator": "equal", "operand": false },
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
]
},


{"keys": ["L"], "command": "move", "args": {"by": "subword_ends", "forward": true}, "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+shift+l"], "command": "move", "args": {"by": "subword_ends", "forward": true, "extend": true} },

////////////////// Left word end:


{"keys": ["g"], "command": "move", "args": {"by": "words", "forward": false},"context": [{"key": "setting.command_mode", "operator": "equal", "operand": true },] },

{"keys": ["g"], "command": "move", "args": {"by": "words", "forward": false, "extend": true},
"context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
    {"key": "selection_empty", "operator": "equal", "operand": false },
] },



{ "keys": ["ctrl+g"], "command": "move", "args": {"by": "stops", "word_begin": true, "empty_line": false, "separators": "", "forward": false, "extend": false }, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
]
},

{ "keys": ["ctrl+g"], "command": "move", "args": {"by": "stops", "word_end": true, "empty_line": false, "separators": "", "forward": false, "extend": true }, "context": [
    { "key": "selection_empty", "operator": "equal", "operand": false },
    {"key": "reversed_selection", "match_all": true, "operand": false },
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
]
},


{ "keys": ["ctrl+g"], "command": "move", "args": {"by": "stops", "word_begin": true, "empty_line": false, "separators": "", "forward": false, "extend": true }, "context": [
    { "key": "selection_empty", "operator": "equal", "operand": false },
    {"key": "reversed_selection", "match_all": true, "operand": true },
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
]
},


{ "keys": ["G"], "command": "move", "args": {"by": "stops", "word_begin": true, "empty_line": false, "separators": "", "forward": false, "extend": true }, "context": [
    { "key": "selection_empty", "operator": "equal", "operand": false },
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
]
},

{"keys": ["G"], "command": "move", "args": {"by": "subword_ends", "forward": false, "extend": false}, "context": [
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": true, "match_all": false },
] },

{"keys": ["G"], "command": "move", "args": {"by": "subword_ends", "forward": false, "extend": true}, "context": [
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
] },


{"keys": ["ctrl+shift+g"], "command": "move", "args": {"by": "words", "forward": false, "extend": true}},


////////////////// Beginning of line/Backward by Paragraph:
{"keys": ["a"], "command": "move_to", "args": { "to": "bol" }, "context":
[
    {"key": "setting.command_mode"},
]
},
{"keys": ["a"], "command": "navigate_by_paragraph_backward", "context":
[
    {"key": "following_text", "operator": "regex_contains", "operand": "^$|^\\S", "match_all": true},
    {"key": "preceding_text", "operator": "regex_match", "operand": "^\\s*$", "match_all": true},
    {"key": "setting.command_mode"},
]
},

// clear selection left
{"keys": ["a"], "command": "clear_selection", "args": {"forward": false}, "context": [{"key": "setting.command_mode"}, {"key": "selection_empty", "operator": "equal", "operand": false }, ] },


{ "keys": ["ctrl+a"], "command": "chain",
    "args": {
        "commands": [
            {"command": "move_to", "args": {"to": "hardbol"}},
            {"command": "move_to", "args": {"to": "bol"}},
            {"command": "insert_mode"},
        ]
    },
    "context": [
        { "key": "setting.command_mode" },
    ]
},

////////////////// End of Line/Forward by paragraph:
{"keys": ["s"], "command": "navigate_by_paragraph_forward", "context":
[
    {"key": "setting.command_mode"},
]
},

{"keys": ["s"], "command": "move_to", "args": {"to": "eol", "extend": false}, "context":
[
    {"key": "setting.command_mode"},
    {"key": "following_text", "operator": "not_regex_match", "operand": "^$"},
    {"key": "last_command", "operator": "not_equal", "operand": "navigate_by_paragraph_forward" },
    {"key": "last_command", "operator": "not_equal", "operand": "navigate_by_paragraph_backward" },
]
},

{ "keys": ["ctrl+s"], "command": "chain",
    "args": {
        "commands": [
            {"command": "move_to", "args": {"to": "hardeol"}},
            {"command": "insert_mode"},
        ]
    },
    "context": [
        { "key": "setting.command_mode" },
    ]
},

// clear selection right
{"keys": ["s"], "command": "clear_selection", "args": {"forward": true}, "context": [{"key": "setting.command_mode"}, {"key": "selection_empty", "operator": "equal", "operand": false }, ] },

/////////////////////////////////////////////////////
/////////////////// insert line: ////////////////////
/////////////////////////////////////////////////////

{ "keys": ["."], "command": "chain",
    "args": {
        "commands": [
            {"command": "move_to", "args": {"to": "hardeol"}},
            {"command": "insert", "args": {"characters": "\n"}},
            {"command": "insert_mode"},
        ]
    },
    "context": [
        { "key": "setting.command_mode" },
    ]
},

{ "keys": ["ctrl+."], "command": "chain",
    "args": {
        "commands": [
            {"command": "move_to", "args": {"to": "hardbol"}},
            {"command": "move", "args": {"by": "characters", "forward": false}},
            {"command": "insert", "args": {"characters": "\n"}},
            {"command": "insert_mode"},
        ]
    },
    "context": [
        {"key": "preceding_text", "operator": "regex_contains", "operand": "^\\s"},
        { "key": "setting.command_mode" },
    ]
},


{ "keys": ["ctrl+."], "command": "chain",
    "args": {
        "commands": [
            {"command": "move_to", "args": {"to": "hardbol"}},
            {"command": "insert", "args": {"characters": "\n"}},
            {"command": "move", "args": {"by": "characters", "forward": false}},
            {"command": "insert_mode"},
        ]
    },
    "context": [
        { "key": "setting.command_mode" },
    ]
},


/////////////////////////////////////////////////////
////////////////// insert space: ////////////////////
/////////////////////////////////////////////////////

{"keys": ["-"], "command": "insert_snippet", "args": {"contents": " ${0:$SELECTION} "}, "context": [{"key": "selection_empty", "operator": "equal", "operand": false}, {"key": "setting.command_mode"}, ]},
{"keys": ["ctrl+-"], "command": "insert_snippet", "args": {"contents": "${0} "}, "context": [{"key": "selection_empty", "operator": "equal", "operand": true}, {"key": "setting.command_mode"}, ]},
{"keys": ["-"], "command": "insert", "args": {"characters": " "}, "context": [{"key": "selection_empty", "operator": "equal", "operand": true}, {"key": "setting.command_mode"}, ] },

/////////////////////////////////////////////////////
/////////////////// SWAP LINES: /////////////////////
/////////////////////////////////////////////////////

{"keys": ["ctrl+c"], "command": "swap_line_up", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+t"], "command": "swap_line_down", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["T"], "command": "transpose", "context": [{"key": "setting.command_mode" } ] },
{"keys": ["T"], "command": "toggle_true_false", "context": [{"key": "setting.command_mode" },
    {"key": "num_selections", "operator": "not_equal", "operand": 2 },
 ] },

{"keys": ["ctrl+shift+c"], "command": "increment"},
{"keys": ["ctrl+shift+t"], "command": "decrement"},

////////////////////////////////////////////////////////////////
/////////////////// Delete left/right: //////////////////////
////////////////////////////////////////////////////////////////

{"keys": ["e"], "command": "right_delete", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+e"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/delete_rest_of_line.sublime-macro"}, "context": [ {"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/delete_subword_backward.sublime-macro"}, "context": [{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }, {"key": "setting.command_mode"}, ] },

{"keys": [","], "command": "delete_word", "args": { "forward": false }, "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+,"], "command": "delete_word", "args": { "forward": false }, "context": [{"key": "setting.is_widget"}, ] },
{"keys": ["<"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/delete_Word_backward.sublime-macro"}, "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+,"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/delete_Word_and_space_backward.sublime-macro"}, "context": [{"key": "setting.command_mode"}, ] },

{"keys": [","], "command": "insert_before_or_after", "args": {"after": false}, "context":
[
    // {"key": "last_command", "operator": "equal", "operand": "insert_snippet" },
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    {"key": "setting.command_mode"},
]
},

{"keys": ["p"], "command": "delete_word", "args": { "forward": true }, "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+p"], "command": "delete_word", "args": { "forward": true }, "context": [{"key": "setting.is_widget"}, ] },
{"keys": ["P"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/delete_Word_forward.sublime-macro"}, "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+p"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/delete_Word_and_space_forward.sublime-macro"}, "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["p"], "command": "insert_before_or_after", "args": {"after": true}, "context":
[
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    {"key": "setting.command_mode"},
]
},

{"keys": ["p"], "command": "insert_before_or_after", "args": {"after": true, "plusone": true}, "context":
[
    {"key": "last_command", "operator": "equal", "operand": "insert_snippet" },
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    {"key": "setting.command_mode"},
]
},




/////////////////////////////////////////////////////
/////////////////// UNDO REDO: //////////////////////
/////////////////////////////////////////////////////

{"keys": ["y"], "command": "undo", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+y"], "command": "redo_or_repeat", "context": [{"key": "setting.command_mode"}, ] },

///////////////////////////////////////////////////
/////////////////// COMMENT: //////////////////////
///////////////////////////////////////////////////

{"keys": [";"], "command": "toggle_comment_enhanced", "args": { "block": false },"context": [{"key": "setting.command_mode"}, ] },

/////////////////////////////////////////////////
/////////////////// CUT: //////////////////////
/////////////////////////////////////////////////

{"keys": ["q"], "command": "smart_cut" , "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["backspace"], "command": "delete_smart", "context": [{"key": "selection_empty", "operator": "equal", "operand": false }, {"key": "setting.command_mode"} ] },

//////////////////////////////////////////////////
/////////////////// COPY: //////////////////////
//////////////////////////////////////////////////

// this command is intended to be run after a search to copy the whole line
{"keys": ["j"], "command": "smart_copy", "args": {"whole_line": true}, "context": [
    {"key": "setting.command_mode"},
] },

{"keys": ["j"], "command": "smart_copy", "context": [
    {"key": "setting.command_mode"},
    {"key": "last_command", "operator": "not_equal", "operand": "" },
    {"key": "last_command", "operator": "not_equal", "operand": "find_next" },
] },

{"keys": ["j"], "command": "copy_in_find_in_files", "context": [
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": true },
    {"key": "selector","operator": "equal", "operand": "text.find-in-files"}
] },

//////////////////////////////////////////////////
/////////////////// PASTE: //////////////////////
//////////////////////////////////////////////////

{"keys": ["alt+k"], "command": "smart_paste_cut_newlines_or_whitespace", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["k"], "command": "smart_paste", "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["k"], "command": "smart_paste_cut_whitespace", "context": [
    {"key": "num_selections", "operator": "equal", "operand": 1 },
    {"key": "selection_empty", "operator": "equal", "operand": false },
    {"key": "text", "operator": "not_regex_contains", "operand": "\n"},
    {"key": "setting.command_mode"},
] },

///////////////////////////////////////////////////
/////////////////// DUPLICATE: //////////////////////
///////////////////////////////////////////////////

{"keys": ["ctrl+z"], "command": "delete_smart", "context": [{"key": "setting.command_mode"}, ] },
// this command is intended to be run after a search to mark the whole word
{ "keys": ["z"], "command": "chain",
        "args": {
            "commands": [
                {"command": "clear_selection", "args": {"forward": false}},
                {"command": "duplicate_line"},
            ]},
        "context": [
            { "key": "setting.command_mode" },
     ]
},

{"keys": ["z"], "command": "duplicate_line", "context": [
    {"key": "last_command", "operator": "not_equal", "operand": "find_next" },
    {"key": "last_command", "operator": "not_equal", "operand": "" },
    {"key": "setting.command_mode"},
 ] },


{"keys": ["z"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/duplicate_with_multiple_cursors.sublime-macro"},"context":
    [
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": true },
    {"key": "num_selections", "operator": "not_equal", "operand": 1 },
    ]
},

/////////////////////////////////////////////////////
/////////////////// SELECTIONS: /////////////////////
/////////////////////////////////////////////////////

{"keys": ["f"], "command": "expand_selection_to_next", "args": {"around": false},
    "context": [
    {"key": "setting.command_mode"},
  ] },


{"keys": ["ctrl+f"], "command": "expand_selection_to_next", "args": {"from_here": true},
    "context": [
    {"key": "setting.command_mode"},
  ] },


{"keys": ["ctrl+shift+f"], "command": "expand_selection_to_next", "args": {"to_here": true},
    "context": [
    {"key": "setting.command_mode"},
  ] },


{"keys": ["F"], "command": "expand_selection_to_next", "args": {"around": true},
    "context": [
    {"key": "setting.command_mode"},
  ] },

{"keys": ["ctrl+d"], "command": "expand_selection", "args": {"to": "indentation"}, "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["ctrl+d"], "command": "expand_selection", "args": {"to": "tag"}, "context": [{"key": "setting.command_mode"}, {"key": "selector", "operator": "equal", "operand": "meta.tag, text.xml" }, ] },



{"keys": ["ctrl+i"], "command": "move_to", "args": {"to": "bol", "extend": true}, "context": [{"key": "setting.command_mode"} ] },
{"keys": ["i"], "command": "move_to", "args": {"to": "eol", "extend": true}, "context": [{"key": "setting.command_mode"}, ] },

// joining and splitting lines
{"keys": ["J"], "command": "join_lines", "context": [{"key": "setting.command_mode"}, ]},
{"keys": ["K"], "command": "insert_snippet", "args": {"contents": "${0:$SELECTION}\n"}, "context": [{"key": "setting.command_mode"}, ]},


// expand selection to paragraph

{"keys": ["d"], "command": "extended_expand_selection_to_paragraph_forward", "context": [
    {"key": "setting.command_mode"},
] },

// this command is intended to be run after a search to mark the whole paragraph
{ "keys": ["d"], "command": "chain",
        "args": {
            "commands": [
                {"command": "clear_selection", "args": {"forward": false}},
                {"command": "extended_expand_selection_to_paragraph_forward"},
            ]},
        "context": [
            {"key": "setting.command_mode" },
            {"key": "last_command", "operator": "equal", "operand": "find_next" },
     ]
},

{"keys": ["D"], "command": "extended_expand_selection_to_paragraph_backward", "context": [{"key": "setting.command_mode"},
 ] },

////////////////////////////////////////////////////
/////////////////// FIND_UNDER_EXPAND: /////////////
////////////////////////////////////////////////////


{"keys": [" ", "n"], "command": "move", "args": {"by": "subword_ends", "forward": true, "extend": true}, "context": [
    {"key": "setting.command_mode"},
    {"key": "num_selections", "operator": "equal", "operand": 1 },
] },

{"keys": ["ctrl+shift+n"], "command": "subtract_first_selection", "context": [{"key": "setting.command_mode"}, ] },

{ "keys": ["ctrl+shift+n"], "command": "chain",
        "args": {
            "commands": [
                {"command": "set_setting", "args": {"setting": "sneak_override_find_keybinding", "value": false }},
                {"command": "find_all_under"},
            ]},
        "context": [
            {"key": "num_selections", "operator": "equal", "operand": 1 },
            { "key": "setting.command_mode" },
     ]
},

{ "keys": ["ctrl+shift+n"], "command": "chain",
        "args": {
            "commands": [
                {"command": "set_setting", "args": {"setting": "sneak_override_find_keybinding", "value": false }},
                {"command": "smart_find_word"},
                {"command": "find_all_under"},
            ]},
        "context": [
            {"key": "selection_empty", "operator": "equal", "operand": true},
            {"key": "num_selections", "operator": "equal", "operand": 1 },
            { "key": "setting.command_mode" },
     ]
},

{ "keys": ["n"], "command": "chain",
        "args": {
            "commands": [
                {"command": "set_setting", "args": {"setting": "sneak_override_find_keybinding", "value": false }},
                {"command": "smart_find_word"},
                {"command": "find_under_expand"},
            ]},
        "context": [
            { "key": "setting.command_mode" },
     ]
},

{ "keys": ["n"], "command": "chain",
        "args": {
            "commands": [
                {"command": "set_setting", "args": {"setting": "sneak_override_find_keybinding", "value": false }},
                {"command": "find_under_expand"},
            ]},
        "context": [
            {"key": "last_command", "operator": "not_equal", "operand": "find_next" },
            {"key": "last_command", "operator": "not_equal", "operand": "" },
            {"key": "selection_empty", "operator": "equal", "operand": false},
            {"key": "setting.command_mode"},
     ]
},

{"keys": ["N"], "command": "undo_find_under_expand", "context": [
    {"key": "setting.command_mode"},
] },

{ "keys": ["ctrl+n"], "command": "smart_find_boundary", "context": [{"key": "setting.command_mode", "operator": "equal", "operand": true }, ] },

//////////////////////////////////////////////
///////////// EXPAND WITH CONTROL: ///////////
//////////////////////////////////////////////


// multiple cursors
{"keys": ["w"], "command": "select_lines", "args": {"forward": true} , "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["w"], "command": "split_selection_into_lines_spaces", "context": [
    {"key": "setting.command_mode"},
    { "key": "last_command", "operator": "not_equal", "operand": "split_selection_into_lines_spaces" },
    {"key": "selection_empty", "operator": "equal", "operand": false},
] },


{ "keys": ["w"], "command": "chain",
        "args": {
            "commands": [
                {"command": "clear_selection", "args": {"forward": true}},
                {"command": "select_lines", "args": {"forward": true}},
            ]},
        "context": [
            { "key": "last_command", "operator": "equal", "operand": "find_next" },
            { "key": "setting.command_mode" },
            { "key": "selection_empty", "operator": "equal", "operand": false },
            { "key": "auto_complete_visible", "operand": false }
        ]
},

{"keys": ["W"], "command": "run_macro_file", "args": {"file": "res://Packages/sublime-fly-keys/macros/add_cursors_to_indentatation.sublime-macro"}, "context": [
            { "key": "setting.command_mode" },
        ]
},

{"keys": ["S"], "command": "add_cursors_to_end_of_paragraph", "context": [{"key": "setting.command_mode"}]},

{ "keys": ["S"], "command": "chain",
    "args": {
        "commands": [
            {"command": "move", "args": {"by": "characters", "forward": true}},
            {"command": "insert_mode"},
        ]
    },
    "context": [
        {"key": "setting.command_mode"},
        {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
},


{"keys": ["A"], "command": "add_cursors_to_beginning_of_paragraph", "context": [{"key": "setting.command_mode"}]},
{ "keys": ["A"], "command": "chain",
    "args": {
        "commands": [
            {"command": "move", "args": {"by": "characters", "forward": false}},
            {"command": "insert_mode"},
        ]
    },
    "context": [
        {"key": "setting.command_mode"},
        {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
},



{"keys": ["ctrl+w"], "command": "select_lines", "args": {"forward": false} , "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["ctrl+w"], "command": "split_selection_into_lines", "context": [
    {"key": "setting.command_mode"},
    {"key": "selection_empty", "operator": "equal", "operand": false},
] },



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////// AUTO COMPLETION: ////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

{"keys": ["shift+space"], "command": "auto_complete"},

// {"keys": ["/"], "command": "goto_symbol_in_project" , "context": [{"key": "setting.command_mode"}, ] },
// {"keys": ["ctrl+/"], "command": "lsp_workspace_symbols" , "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["@"], "command": "goto_reference" , "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["@"], "command": "lsp_symbol_references" , "context": [{"key": "setting.command_mode"}, {"key": "setting.lsp_active"}, ] },
// {"keys": ["ctrl+shift+f"], "command": "lsp_symbol_implementation" , "context": [{"key": "setting.command_mode"}, {"key": "setting.lsp_active"}, ] },

{"keys": ["ctrl+shift+l"], "command": "lsp_symbol_rename" , "context": [{"key": "setting.command_mode"}, {"key": "setting.lsp_active"}, ] },


{"keys": ["alt"], "command": "lsp_hover", "context": [{"key": "setting.lsp_active"}, ] },
{"keys": ["shift"], "command": "lsp_code_actions", "context":
    [
        {"key": "setting.command_mode"},
        {"key": "setting.lsp_active"}
    ]
},
{"keys": ["shift"], "command": "revert_selection", "context": [{"key": "setting.command_mode", "operator": "equal", "operand": true }, {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true } ] },

{"keys": ["ctrl"], "command": "show_overlay", "args": {"overlay": "command_palette"} },

{"keys": ["`"], "command": "next_view_in_stack" },
{"keys": ["`"], "command": "insert", "args": {"characters": "`"}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },
{"keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{ "key": "auto_complete_visible" },{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },


{"keys": ["ctrl+z"], "command": "poor_mans_debugging", "context": [
    {"key": "text", "operator": "not_regex_contains", "operand": "\n"},
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    {"key": "selector", "operator": "equal", "operand": "source.python"},
    {"key": "setting.command_mode", "operator": "equal", "operand": true },
] },

{"keys": ["ctrl+q"], "command": "cut"},
{"keys": ["ctrl+q"], "command": "delete_smart","context": [{"key": "setting.command_mode", "operator": "equal", "operand": true },]},
{"keys": ["ctrl+j"], "command": "copy"},
{"keys": ["ctrl+k"], "command": "paste", "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },

/////////////////////////////////////////////////
/////////////////// ESCAPE: /////////////////////
/////////////////////////////////////////////////

{"keys": ["ctrl+escape"], "command": "jump_back", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["shift+escape"], "command": "single_selection_last", "context": [{"key": "num_selections", "operator": "not_equal", "operand": 1 }, ] },

{"keys": ["ctrl+escape"], "command": "chain",
    "args": {
        "commands": [
            {"command": "command_mode" },
            {"command": "single_selection" },
        ]
    },
    "context": [
        {"key": "setting.command_mode", "operator": "equal", "operand": false }
        , ]
},

{"keys": ["escape"], "command": "chain",
    "args": {
        "commands": [
            {"command": "set_setting", "args": {"setting": "needs_char", "value": false }},
            {"command": "show_at_center" },
        ]
    },
    "context": [{"key": "setting.command_mode"}, ]
},

{"keys": ["escape"], "command": "single_selection", "context": [{"key": "num_selections", "operator": "not_equal", "operand": 1 }, ] },
{"keys": ["escape"], "command": "hide_popup", "context": [{"key": "popup_visible", "operator": "equal", "operand": true} ] },
{"keys": ["escape"], "command": "hide_panel", "args": {"cancel": true}, "context": [
    {"key": "panel", "operand": "output.exec"},
    { "key": "panel_visible", "operator": "equal", "operand": true } ] },
{"keys": ["escape"], "command": "hide_panel", "args": {"cancel": true}, "context": [
    {"key": "panel", "operand": "find"},
    { "key": "panel_visible", "operator": "equal", "operand": true } ] },
{"keys": ["escape"], "command": "hide_panel", "args": {"cancel": true}, "context": [
    {"key": "panel", "operand": "replace"},
    { "key": "panel_visible", "operator": "equal", "operand": true } ] },
{"keys": ["escape"], "command": "hide_panel", "args": {"cancel": true}, "context": [
    {"key": "panel", "operand": "find_in_files"},
    { "key": "panel_visible", "operator": "equal", "operand": true } ] },
{ "keys": ["escape"], "command": "hide_overlay", "context":
 [
  { "key": "overlay_visible", "operator": "equal", "operand": true },
  { "key": "panel_has_focus", "operator": "equal", "operand": false }
 ]
},

{"keys": ["escape"], "command": "command_mode", "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, {"key": "setting.is_widget", "operator": "equal", "operand": false} ] },
{"keys": ["escape"], "command": "clear_fields", "context": [{"key": "has_next_field", "operator": "equal", "operand": true} ] },
{"keys": ["escape"], "command": "clear_fields", "context": [{"key": "has_prev_field", "operator": "equal", "operand": true} ] },
{"keys": ["escape"], "command": "focus_neighboring_group", "context": [{"key": "panel", "operand": "console"}, {"key": "panel_has_focus"} ] },

//////////////////////////////////////////////////////////
/////////////////// Tab-keybindings: /////////////////////
//////////////////////////////////////////////////////////
/// this is used for various auto completion such as closing of tags

{"keys": ["tab"], "command": "auto_complete"},

// {"keys": ["tab"], "command": "indent", "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, {"key": "preceding_text", "operator": "regex_contains", "operand": "\\s$"}, {"key": "last_command", "operator": "equal", "operand": "reindent" }, ] },
{"keys": ["tab"], "command": "indent", "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, {"key": "preceding_text", "operator": "regex_contains", "operand": "\\s$"}, {"key": "last_command", "operator": "equal", "operand": "indent" }, ] },

{"keys": ["tab"], "command": "close_tag", "args": { "insert_slash": true }, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, {"key": "preceding_text", "operator": "not_regex_match", "operand": "^$"}, {"key": "following_text", "operator": "regex_match", "operand": "^\\s*$"}, { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml) - string - comment", "match_all": true },] },
{"keys": ["tab"], "command": "close_tag", "args": { "insert_slash": true }, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, {"key": "preceding_text", "operator": "regex_contains", "operand": "<.+>"}, {"key": "following_text", "operator": "regex_match", "operand": "^$"}, { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml) - string - comment", "match_all": true },] },
// we fallback to moving forward if no other options are available. useful for parentheses.
{"keys": ["tab"], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{"key": "following_text", "operator": "not_regex_contains", "operand": "^[a-zA-Z_\\-]|^$"}, ] },
// indent rules -- these are the only ones with command_mode: true
{"keys": ["tab"], "command": "indent", "context": [{"key": "setting.command_mode"}, {"key": "preceding_text", "operator": "regex_contains", "operand": "\\w"}, ] },
{"keys": ["tab"], "command": "indent", "context": [{"key": "setting.command_mode"}, {"key": "following_text", "operator": "regex_contains", "operand": "\\w"}, ] },
{"keys": ["tab"], "command": "indent", "context": [{"key": "preceding_text", "operator": "regex_match", "operand": "^\\s*$"} ] },
{"keys": ["tab"], "command": "reindent", "context": [{"key": "preceding_text", "operator": "regex_match", "operand": "^\\S*$"}, {"key": "last_command", "operator": "not_equal", "operand": "reindent" }, {"key": "last_command", "operator": "not_equal", "operand": "indent" }, ] },
//default keybindings that should always have first priority
{"keys": ["tab"], "command": "expand_snippet", "context": [{ "key": "has_snippet" }] },
{"keys": ["tab"], "command": "next_field", "context": [{ "key": "has_next_field", "operator": "equal", "operand": true }] },
{"keys": ["tab"], "command": "commit_completion", "context": [{ "key": "auto_complete_visible" }] },
// overlay or find
{"keys": ["tab"], "command": "move", "args": {"by": "lines", "forward": true}, "context": [{ "key": "overlay_has_focus", "operator": "equal", "operand": true }, {"key": "overlay_visible", "operator": "equal", "operand": true }, ] },
// overlay or find
{"keys": ["tab"], "command": "move", "args": {"by": "lines", "forward": true}, "context": [{"key": "panel_has_focus"}, {"key": "overlay_visible", "operator": "equal", "operand": true }, ] },
{"keys": ["tab"], "command": "insert", "args": {"characters": ">"}, "context": [{"key": "preceding_text", "operator": "regex_contains", "operand": "<(div|h5|span)$"}, {"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },

{"keys": ["tab"], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{"key": "following_text", "operator": "regex_contains", "operand": "^\\)"},{"key": "setting.command_mode", "operator": "equal", "operand": false },
 { "key": "auto_complete_visible", "operator": "equal", "operand": false },
 ] },

{"keys": ["tab"], "command": "move", "args": {"by": "characters", "forward": true}, "context": [{"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
 { "key": "auto_complete_visible", "operator": "equal", "operand": false },
 ] },

//////////////////////////////////////////////////
/////////////////// OVERLAY: /////////////////////
//////////////////////////////////////////////////

// {"keys": ["ctrl+h"], "command": "show_overlay", "args": {"overlay": "goto", "text": "@"} },

{"keys": [" "], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true}},
{"keys": [" "], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true}, "context": [{"key": "can_expand"}]},
{"keys": [" "], "command": "insert", "args": {"characters": " "}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },
{"keys": [" "], "command": "insert", "args": {"characters": "@"}, "context": [
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },
{"keys": [" "], "command": "delete_word", "args": { "forward": false }, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, {"key": "overlay_visible", "operator": "equal", "operand": true }, {"key": "preceding_text", "operator": "regex_contains", "operand": "@|:$|#$"}, ] },
{"keys": [" "], "command": "insert", "args": {"characters": ":"}, "context": [{"key": "preceding_text", "operator": "regex_contains", "operand": ":[0-9]+$"}, {"key": "overlay_visible", "operator": "equal", "operand": true }, ] },

///////////////////////////////////////////////////////
/////////////////// Insert Mode: /////////////////////
/////////////////////////////////////////////////////

{"keys": ["ctrl+h"], "command": "insert_single_char", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+shift+h"], "command": "replace_single_char", "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["h"], "command": "insert_mode", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["H"], "command": "delete_rest_of_line_and_insert_mode", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["h"], "command": "multiple_cursors_from_selection", "context": [{"key": "text", "operator": "regex_contains", "operand": "\n"}, {"key": "setting.command_mode"}, ] },
{"keys": ["h"], "command": "find_in_files_goto", "context": [{  "key": "selector","operator": "equal", "operand": "text.find-in-files"} ] },
{"keys": ["h"], "command": "noop", "context":
    [
        {"key": "panel", "operand": "output.exec"},
        {"key": "panel_has_focus", "operator": "equal", "operand": true },
    ]
},


///////////////////////////////////////////////////////
////////////// Focus neighbor groups: ////////////////
/////////////////////////////////////////////////////


{"keys": ["v"], "command": "focus_neighboring_group"},
{"keys": ["v"], "command": "insert", "args": {"characters": "v"}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },

{"keys": ["ctrl+v"], "command": "focus_neighboring_group", "args": {"forward": false}},

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////// THe number row is not used in command mode, so we can use it for all sorts off cool stuff //////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

{"keys": ["!"], "command": "build", "context":
    [
        {"key": "setting.command_mode"},
    ]
},


{"keys": ["1"], "command": "goto_definition" , "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["1"], "command": "lsp_symbol_definition" ,
        "args": {
            "side_by_side": false,
            "force_group": false,
            "fallback": false
        },
 "context": [{"key": "setting.command_mode"}, {"key": "setting.lsp_active"}, ] },

{"keys": ["1"], "command": "expand_selection_to_sentence", "context": [
    { "key": "selector", "operator": "equal", "operand": "(text.xml, text.html.markdown) - string - comment", "match_all": true },
    {"key": "setting.command_mode"}
] },


{"keys": ["2"], "command": "save", "args": { "async": true }, "context": [{"key": "setting.command_mode"}, ] },


{"keys": ["2"], "command": "chain",
    "args": {
        "commands": [
            {"command": "python_formatting"},
            {"command": "save"},
        ]
    },
    "context": [
        {"key": "selector", "operator": "equal", "operand": "source.python"},
        {"key": "setting.command_mode"},
    ]
},

{"keys": ["2"], "command": "lsp_save", "context": [
    {"key": "setting.lsp_active"},
    {"key": "setting.command_mode"},
    {"key": "lsp.session_with_capability", "operator": "equal", "operand": "textDocumentSync.willSave | textDocumentSync.willSaveWaitUntil | codeActionProvider.codeActionKinds | documentFormattingProvider | documentRangeFormattingProvider"}
] },

{"keys": ["2"], "command": "chain",
    "args": {
        "commands": [
            {"command": "python_formatting"},
            {"command": "lsp_save"},
        ]
    },
    "context": [
        {"key": "selector", "operator": "equal", "operand": "source.python"},
        {"key": "setting.lsp_active"},
        {"key": "lsp.session_with_capability", "operator": "equal", "operand": "textDocumentSync.willSave | textDocumentSync.willSaveWaitUntil | codeActionProvider.codeActionKinds | documentFormattingProvider | documentRangeFormattingProvider"},
        {"key": "setting.command_mode"},
    ]
},



{"keys": ["2"], "command": "prompt_git", "context": [{"key": "selector", "operator": "equal", "operand": "text.git.commit"}, {"key": "setting.command_mode"}, ] },

// {"keys": ["2"], "command": "python_formatting" },

{"keys": ["@"], "command": "close"},
{"keys": ["@"], "command": "insert", "args": {"characters": "@"}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },

{"keys": ["3"], "command": "next_bookmark", "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["#"], "command": "prev_bookmark", "context": [{"key": "setting.command_mode"}, ] },

{"keys": ["$"], "command": "chain",
    "args": {
        "commands": [
            {"command": "prev_bookmark"},
            {"command": "set_mark"},
            {"command": "next_bookmark"},
            {"command": "select_to_mark"},
            {"command": "revert_selection"},
        ]
    },
    "context": [
        {"key": "setting.command_mode"},
    ]
},

{"keys": ["4"], "command": "chain",
    "args": {
        "commands": [
            {"command": "toggle_bookmark"},
            {"command": "clear_bookmarks", "args": {"name": "mark"}},
        ]
    },
    "context": [
        {"key": "setting.command_mode"},
    ]
},

{"keys": ["5"], "command": "close_pane" },
{"keys": ["5"], "command": "insert", "args": {"characters": "5"}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },

{"keys": ["6"], "command": "new_pane", "args": {"move": true}},

{"keys": ["6"], "command": "insert", "args": {"characters": "6"}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": false }, ] },


{"keys": ["^"], "command": "chain",
    "args": {
        "commands": [
            {"command": "set_layout", "args": {"cells": [[0, 0, 1, 1], [0, 1, 1, 2]], "cols": [0.0, 1.0], "rows": [0.0, 0.5, 1.0]}},
            {"command": "focus_neighboring_group"},
            {"command": "move_to_neighboring_group", "args": {"forward": false} },
        ]
    },
    "context": [
        {"key": "setting.command_mode"},
    ]
},


{"keys": ["7"], "command": "revert_hunk", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["7"], "command": "revert_modification", "context": [{"key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }, {"key": "setting.command_mode"}, ] },
{"keys": ["8"], "command": "next_modification", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["ctrl+8"], "command": "prev_modification", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["9"], "command": "toggle_inline_diff", "context": [{"key": "setting.command_mode"}, ] },
{"keys": ["0"], "command": "git_add_selected_hunk", "context": [{"key": "setting.command_mode"}, ] },

// {"keys": ["ctrl+s"],     "command": "move_to", "args": {"to": "eof", "extend": false}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": true }, ] },
// {"keys": ["ctrl+s"],     "command": "move_to", "args": {"to": "eof", "extend": true}, "context": [{"key": "selection_empty", "operator": "equal", "operand": false }, {"key": "setting.command_mode", "operator": "equal", "operand": true }, ] },
// {"keys": ["ctrl+a"],     "command": "move_to", "args": {"to": "bof", "extend": false}, "context": [{"key": "setting.command_mode", "operator": "equal", "operand": true }, ] },
// {"keys": ["ctrl+a"],     "command": "move_to", "args": {"to": "bof", "extend": true}, "context": [{"key": "selection_empty", "operator": "equal", "operand": false }, {"key": "setting.command_mode", "operator": "equal", "operand": true }, ] },

////////////////////////////////////////////////
////////////// Find and select ////////////////
//////////////////////////////////////////////


{"keys": ["ctrl+shift+enter"], "command": "insert_snippet", "args": {"contents": "\n${0:$SELECTION}\n"}, "context": [{"key": "selection_empty", "operator": "equal", "operand": false }, {"key": "setting.command_mode"}, ]},
{"keys": ["ctrl+shift+enter"], "command": "find_all", "args": {"close_panel": true}, "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}] },
{"keys": ["ctrl+shift+enter"], "command": "replace_all", "args": {"close_panel": true}, "context": [{"key": "panel", "operand": "replace"}, {"key": "panel_has_focus"} ] },

// because we use enter as fallback we must include all the default keybindings as well
{"keys": ["enter"], "command": "find_next", "context": [{"key": "setting.command_mode"} ] },
{"keys": ["enter"], "command": "find_under_expand_skip", "context": [{"key": "num_selections", "operator": "not_equal", "operand": 1 }, {"key": "setting.command_mode"} ] },

{"keys": ["enter"], "command": "select", "context": [{"key": "control", "operand": "sidebar_tree"}] },
{"keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line.sublime-macro"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "panel_has_focus", "operator": "equal", "operand": false },
     ] },

{ "keys": ["enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line in Braces.sublime-macro"}, "context":
  [
   { "key": "setting.auto_indent", "operator": "equal", "operand": true },
   { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
   { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
   { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
  ]
 },
{ "keys": ["enter"], "command": "auto_indent_tag", "context":
 [
  { "key": "setting.auto_indent", "operator": "equal", "operand": true },
  { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
  { "key": "selector", "operator": "equal", "operand": "punctuation.definition.tag.begin", "match_all": true },
  { "key": "preceding_text", "operator": "regex_contains", "operand": ">$", "match_all": true },
  { "key": "following_text", "operator": "regex_contains", "operand": "^</", "match_all": true },
 ]
},


{ "keys": ["enter"], "command": "find_next", "context": [{"key": "panel", "operand": "find"}, {"key": "panel_has_focus"}] },
{ "keys": ["enter"], "command": "find_all", "context": [{"key": "panel", "operand": "find_in_files"}, {"key": "panel_has_focus"} ] },
{ "keys": ["enter"], "command": "select", "context": [{ "key": "overlay_has_focus", "operator": "equal", "operand": true }, { "key": "overlay_name", "operator": "equal", "operand" : "goto" } ], },

{ "keys": ["ctrl+m"],       "command": "listen_for_character", "args": {"forward": true },                 "context": [{"key": "setting.command_mode"}]},
{ "keys": ["m"],            "command": "listen_for_character", "args": {"forward": true, "single": true },                 "context": [{"key": "setting.command_mode"}]},
{ "keys": ["ctrl+shift+m"], "command": "listen_for_character", "args": {"forward": true, "extend": true }, "context": [{"key": "setting.command_mode"}]},
{ "keys": ["M"],            "command": "listen_for_character", "args": {"forward": true, "single": true, "extend": true }, "context": [{"key": "setting.command_mode"}]},

{ "keys": ["ctrl+b"],       "command": "listen_for_character", "args": {"forward": false },                 "context": [{"key": "setting.command_mode"}]},
{ "keys": ["b"],            "command": "listen_for_character", "args": {"forward": false, "single": true },                 "context": [{"key": "setting.command_mode"}]},
{ "keys": ["B"],            "command": "listen_for_character", "args": {"forward": false, "single": true, "extend": true }, "context": [{"key": "setting.command_mode"}]},
{ "keys": ["ctrl+shift+b"], "command": "listen_for_character", "args": {"forward": false, "extend": true }, "context": [{"key": "setting.command_mode"}]},

{"keys": ["x"], "command": "chain",
    "args": {
        "commands": [
            {"command": "set_setting", "args": {"setting": "sneak_override_find_keybinding", "value": false }},
            {"command": "show_panel", "args": {"panel": "find", "reverse": false},},
        ]
    },
"context": [{"key": "setting.command_mode", "operator": "equal", "operand": true }, ] },

{"keys": ["ctrl+x"], "command": "chain",
    "args": {
        "commands": [
            {"command": "set_setting", "args": {"setting": "sneak_override_find_keybinding", "value": false }},
            {"command": "show_panel", "args": {"panel": "replace", "reverse": false},},
        ]
    },
"context": [{"key": "setting.command_mode", "operator": "equal", "operand": true }, ] },

{ "keys": ["shift+enter"], "command": "find_prev", "context": [{"key": "setting.command_mode"} ] },
{ "keys": ["ctrl+enter"],   "command": "replace_next", "context": [{"key": "panel_visible", "operator": "equal", "operand": true}] },
{ "keys": ["enter"],       "command": "repeat_find_next_character", "args": {"forward": true},  "context": [{"key": "setting.sneak_override_find_keybinding"}, {"key": "setting.command_mode"}]},
{ "keys": ["shift+enter"], "command": "repeat_find_next_character", "args": {"forward": false}, "context": [{"key": "setting.sneak_override_find_keybinding"}, {"key": "setting.command_mode"}]},

{ "keys": ["<character>"], "command": "find_next_character", "args": {"character": "<character>"}, "context": [{"key": "setting.needs_char"} ] },


{ "keys": ["ctrl+enter"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Add Line.sublime-macro"}, "context":
    [
        { "key": "setting.command_mode", "operator": "equal", "operand": true },
        { "key": "overlay_has_focus", "operator": "equal", "operand": false }
    ]
},

/////////////////////////////////////////////////////
//////////////////// SEARCH AND REPLACE /////////////
/////////////////////////////////////////////////////

{ "keys": ["1"], "command": "go_to_nth_match", "args": {"number": 1}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },
{ "keys": ["2"], "command": "go_to_nth_match", "args": {"number": 2}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },
{ "keys": ["3"], "command": "go_to_nth_match", "args": {"number": 3}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },
{ "keys": ["4"], "command": "go_to_nth_match", "args": {"number": 4}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },
{ "keys": ["5"], "command": "go_to_nth_match", "args": {"number": 5}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },
{ "keys": ["6"], "command": "go_to_nth_match", "args": {"number": 6}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },
{ "keys": ["7"], "command": "go_to_nth_match", "args": {"number": 7}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },
{ "keys": ["8"], "command": "go_to_nth_match", "args": {"number": 8}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },
{ "keys": ["9"], "command": "go_to_nth_match", "args": {"number": 9}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },
{ "keys": ["0"], "command": "go_to_nth_match", "args": {"number": 10}, "context": [{ "key": "setting.command_mode"}, {"key": "setting.has_stored_search"}] },

{ "keys": ["1"], "command": "insert", "args": {"characters": ":1"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


{ "keys": ["2"], "command": "insert", "args": {"characters": ":2"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


{ "keys": ["3"], "command": "insert", "args": {"characters": ":3"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


{ "keys": ["4"], "command": "insert", "args": {"characters": ":4"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


{ "keys": ["5"], "command": "insert", "args": {"characters": ":5"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


{ "keys": ["6"], "command": "insert", "args": {"characters": ":6"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


{ "keys": ["7"], "command": "insert", "args": {"characters": ":7"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


{ "keys": ["8"], "command": "insert", "args": {"characters": ":8"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


{ "keys": ["9"], "command": "insert", "args": {"characters": ":9"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


{ "keys": ["0"], "command": "insert", "args": {"characters": ":0"}, "context": [
    {"key": "setting.command_mode", "operator": "equal", "operand": false },
    {"key": "preceding_text", "operator": "not_regex_contains", "operand": "@$|#$|\\d|:"},
    {"key": "overlay_visible", "operator": "equal", "operand": true },
    {"key": "overlay_name", "operator": "equal", "operand" : "goto" }
] },


]
